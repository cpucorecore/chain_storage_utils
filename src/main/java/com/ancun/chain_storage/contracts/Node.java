package com.ancun.chain_storage.contracts;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionEncoder;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Address;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint8;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple3;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class Node extends Contract {
    public static final String[] BINARY_ARRAY = {"","50610bfb91908101906183ff565b9050610c05616b28565b73ffffffffffffffffffffffffffffffffffffffff16637c8632f784610c35600185616c0390919063ffffffff16565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c6e92919061881a565b600060405180830381600087803b158015610c8857600080fd5b505af1158015610c9c573d6000803e3d6000fd5b50505050610ca8616b28565b73ffffffffffffffffffffffffffffffffffffffff16634afb470e846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610cfc9190618736565b60206040518083038186803b158015610d1457600080fd5b505afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d4c91908101906182f1565b15610de057610d59616b28565b73ffffffffffffffffffffffffffffffffffffffff16634c6ccbac846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dad9190618736565b600060405180830381600087803b158015610dc757600080fd5b505af1158015610ddb573d6000803e3d6000fd5b505050505b505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610e15616b28565b73ffffffffffffffffffffffffffffffffffffffff1663092aa6cf836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e699190618736565b60206040518083038186803b158015610e8157600080fd5b505afa158015610e95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610eb991908101906183ff565b9050919050565b60606000610ecc616b28565b73ffffffffffffffffffffffffffffffffffffffff16631256aac78686866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f24939291906188c8565b60006040518083038186803b158015610f3c57600080fd5b505afa158015610f50573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610f79919081019061829d565b91509150935093915050565b60606004805480602002602001604051908101604052809291908181526020018280548015610fd357602002820191906000526020600020905b815481526020019060010190808311610fbf575b5050505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111106040805190810160405280601981526020017f3a2063616c6c6572206973206e6f7420746865206f776e65720000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110fd5780601f106110d2576101008083540402835291602001916110fd565b820191906000526020600020905b8154815290600101906020018083116110e057829003601f168201915b5050505050616b3790919063ffffffff16565b901515611153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114a9190618b32565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112676040805190810160405280601f81526020017f3a206e6577206f776e657220697320746865207a65726f20616464726573730081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112545780601f1061122957610100808354040283529160200191611254565b820191906000526020600020905b81548152906001019060200180831161123757829003601f168201915b5050505050616b3790919063ffffffff16565b9015156112aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a19190618b32565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060611375616b28565b73ffffffffffffffffffffffffffffffffffffffff166319ad3d716040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160006040518083038186803b1580156113d657600080fd5b505afa1580156113ea573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061141391908101906181c7565b905090565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061145f616b28565b73ffffffffffffffffffffffffffffffffffffffff166330ccebb5836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114b39190618736565b60206040518083038186803b1580156114cb57600080fd5b505afa1580156114df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611503919081019061836c565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156116406040805190810160405280601181526020017f3a2053746f72616765206e6f742073657400000000000000000000000000000081525060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561162d5780601f106116025761010080835404028352916020019161162d565b820191906000526020600020905b81548152906001019060200180831161161057829003601f168201915b5050505050616b3790919063ffffffff16565b901515611683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167a9190618b32565b60405180910390fd5b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006116dc616c5a565b73ffffffffffffffffffffffffffffffffffffffff1663f97060e76040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561173d57600080fd5b505afa158015611751573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061177591908101906183ff565b9050806000141561185e6040805190810160405280600e81526020017f3a207265706c696361206973203000000000000000000000000000000000000081525060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561184b5780601f106118205761010080835404028352916020019161184b565b820191906000526020600020905b81548152906001019060200180831161182e57829003601f168201915b5050505050616b3790919063ffffffff16565b9015156118a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118989190618b32565b60405180910390fd5b5060606118ae8383616c8a565b9050818151146119966040805190810160405280601c81526020017f3a2061646446696c653a206e6f20617661696c61626c65206e6f64650000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119835780601f1061195857610100808354040283529160200191611983565b820191906000526020600020905b81548152906001019060200180831161196657829003601f168201915b5050505050616b3790919063ffffffff16565b9015156119d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d09190618b32565b60405180910390fd5b5060008090505b8151811015611ac7576119f1616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663923c656660008989898787815181101515611a1f57fe5b906020019060200201518a6040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a6796959493929190618a16565b602060405180830381600087803b158015611a8157600080fd5b505af1158015611a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ab991908101906183ff565b5080806001019150506119e0565b50505050505050565b6000611ada616b28565b73ffffffffffffffffffffffffffffffffffffffff16634dfefc4b836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b2e9190618736565b60206040518083038186803b158015611b4657600080fd5b505afa158015611b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b7e91908101906182f1565b9050919050565b611b8e81616953565b611b96616b28565b73ffffffffffffffffffffffffffffffffffffffff1663092aa6cf826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bea9190618736565b602060","","815260200182805460018160011615610100020316600290048015612c535780601f10612c2857610100808354040283529160200191612c53565b820191906000526020600020905b815481529060010190602001808311612c3657829003601f168201915b5050505050616b3790919063ffffffff16565b901515612ca9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ca09190618b32565b60405180910390fd5b50612cb2616b28565b73ffffffffffffffffffffffffffffffffffffffff166394fc2a4e8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612d0a939291906187b8565b600060405180830381600087803b158015612d2457600080fd5b505af1158015612d38573d6000803e3d6000fd5b50505050505050565b6000612d4b616eeb565b73ffffffffffffffffffffffffffffffffffffffff16634f0f4aa9836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612d9f9190618bd4565b60206040518083038186803b158015612db757600080fd5b505afa158015612dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612def9190810190617f54565b90506000612dfb616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663c41a360a846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612e4f9190618bd4565b60206040518083038186803b158015612e6757600080fd5b505afa158015612e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e9f9190810190617f54565b90506060612eab616eeb565b73ffffffffffffffffffffffffffffffffffffffff16633beaa6ab856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612eff9190618bd4565b60006040518083038186803b158015612f1757600080fd5b505afa158015612f2b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612f549190810190618395565b90506000612f60616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663023c23db866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612fb49190618bd4565b60206040518083038186803b158015612fcc57600080fd5b505afa158015612fe0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061300491908101906183ff565b90506000613010616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663b6e76873876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016130649190618bd4565b60206040518083038186803b15801561307c57600080fd5b505afa158015613090573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130b49190810190618343565b90506130be616b28565b73ffffffffffffffffffffffffffffffffffffffff16635054db158661319960016130e7616b28565b73ffffffffffffffffffffffffffffffffffffffff1663f3868df18b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161313b9190618736565b60206040518083038186803b15801561315357600080fd5b505afa158015613167573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061318b91908101906183ff565b616c0390919063ffffffff16565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016131d292919061881a565b600060405180830381600087803b1580156131ec57600080fd5b505af1158015613200573d6000803e3d6000fd5b5050505061320d85616f1b565b613215616eeb565b73ffffffffffffffffffffffffffffffffffffffff16639acb490e876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016132699190618bd4565b600060405180830381600087803b15801561328357600080fd5b505af1158015613297573d6000803e3d6000fd5b505050508060018111156132a757fe5b600060018111156132b457fe5b14156136d55760006132c4616c5a565b73ffffffffffffffffffffffffffffffffffffffff166335a5c0036040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561332557600080fd5b505afa158015613339573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061335d91908101906183ff565b90506000613369616b28565b73ffffffffffffffffffffffffffffffffffffffff166357df3b08866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016133bd9190618b32565b60206040518083038186803b1580156133d557600080fd5b505afa1580156133e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061340d91908101906183ff565b9050818110151561342457505050505050506136db565b61342c616b28565b73ffffffffffffffffffffffffffffffffffffffff1663a238ed798661345c600185616c0390919063ffffffff16565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613495929190618b84565b600060405180830381600087803b1580156134af57600080fd5b505af11580156134c3573d6000803e3d6000fd5b5050505060606134d4856001616c8a565b905080516001146135bd6040805190810160405280601581526020017f3a206e6f20617661696c61626c65206e6f64653a31000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156135aa5780601f1061357f576101008083540402835291602001916135aa565b820191906000526020600020905b81548152906001019060200180831161358d57829003601f168201915b5050505050616b3790919063ffffffff16565b901515613600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016135f79190618b32565b60405180910390fd5b50613609616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663923c65666000898985600081518110151561363757fe5b906020019060200201518a6040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161367e959493929190618a72565b602060405180830381600087803b15801561369857600080fd5b505af11580156136ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136d091908101906183ff565b505050505b50505050505b50565b6136e781616953565b60006136f1616b28565b73ffffffffffffffffffffffffffffffffffffffff166330ccebb5836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016137459190618736565b60206040518083038186803b15801561375d57600080fd5b505afa158015613771573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613795919081019061836c565b90508060048111156137a357fe5b600160048111156137b057fe5b14806137d257508060048111156137c357fe5b600360048111156137d057fe5b145b806137f257508060048111156137e457fe5b6004808111156137f057fe5b145b6138d46040805190810160405280600e81526020017f3a2077726f6e672073746174757300000000000000000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156138c15780601f10613896576101008083540402835291602001916138c1565b820191906000526020600020905b8154815290600101906020018083116138a457829003601f168201915b5050505050616b3790919063ffffffff16565b901515613917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161390e9190618b32565b60405180910390fd5b506000613922616b28565b73ffffffffffffffffffffffffffffffffffffffff1663fbc90935846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016139769190618736565b60206040518083038186803b15801561398e57600080fd5b505afa1580156139a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506139c691908101906183ff565b905060006139d2616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663caccdd66856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613a269190618736565b60206040518083038186803b158015613a3e57600080fd5b505afa158015613a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a7691908101906183ff565b9050818114613b5d6040805190810160405280601681526020017f3a206d7573742066696e69736820616c6c207461736b0000000000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613b4a5780601f10613b1f57610100808354040283529160200191613b4a565b820191906000526020600020905b815481529060010190602001808311613b2d57829003601f168201915b5050505050616b3790919063ffffffff16565b901515613ba0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b979190618b32565b60405180910390fd5b50613ba9616b28565b73ffffffffffffffffffffffffffffffffffffffff1663278e07ce8560026040518363ffffffff167c010000000000000000000000000000000000000000000000000000","","15614bfc573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250614c2591908101906181c7565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614614d5d6040805190810160405280601981526020017f3a2063616c6c6572206973206e6f7420746865206f776e65720000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614d4a5780601f10614d1f57610100808354040283529160200191614d4a565b820191906000526020600020905b815481529060010190602001808311614d2d57829003601f168201915b5050505050616b3790919063ffffffff16565b901515614da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614d979190618b32565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415614e9860606040519081016040528060218152602001618f4e6021913960008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015614e855780601f10614e5a57610100808354040283529160200191614e85565b820191906000526020600020905b815481529060010190602001808311614e6857829003601f168201915b5050505050616b3790919063ffffffff16565b901515614edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614ed29190618b32565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a380600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146150cf6040805190810160405280601981526020017f3a2063616c6c6572206973206e6f7420746865206f776e65720000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156150bc5780601f10615091576101008083540402835291602001916150bc565b820191906000526020600020905b81548152906001019060200180831161509f57829003601f168201915b5050505050616b3790919063ffffffff16565b901515615112576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016151099190618b32565b60405180910390fd5b5060008090505b60048054905081101561526a57600060048281548110151561513757fe5b90600052602060002001549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321f8a721826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016151bb91906189e0565b60206040518083038186803b1580156151d357600080fd5b505afa1580156151e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061520b9190810190617f54565b6005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508080600101915050615119565b50565b6060615277616b28565b73ffffffffffffffffffffffffffffffffffffffff1663d962c33b836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016152cb9190618736565b60006040518083038186803b1580156152e357600080fd5b505afa1580156152f7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506153209190810190618395565b9050919050565b6000806000806060615337616eeb565b73ffffffffffffffffffffffffffffffffffffffff16631d65e77e876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161538b9190618bd4565b60006040518083038186803b1580156153a357600080fd5b505afa1580156153b7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506153e09190810190617f7d565b80955081965082975083985084995050505050508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146155056040805190810160405280601881526020017f3a206e6f64652068617665206e6f2074686973207461736b000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156154f25780601f106154c7576101008083540402835291602001916154f2565b820191906000526020600020905b8154815290600101906020018083116154d557829003601f168201915b5050505050616b3790919063ffffffff16565b901515615548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161553f9190618b32565b60405180910390fd5b5083600181111561555557fe5b6000600181111561556257fe5b141561588b5761557061746d565b73ffffffffffffffffffffffffffffffffffffffff1663e96d64a88487846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016155c893929190618751565b600060405180830381600087803b1580156155e257600080fd5b505af11580156155f6573d6000803e3d6000fd5b50505050615602616b28565b73ffffffffffffffffffffffffffffffffffffffff1663e9bf46b084846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161565892919061881a565b600060405180830381600087803b15801561567257600080fd5b505af1158015615686573d6000803e3d6000fd5b5050505061569261749d565b73ffffffffffffffffffffffffffffffffffffffff16633c9b5a8e8888600085805190602001206040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016156f49493929190618843565b600060405180830381600087803b15801561570e57600080fd5b505af1158015615722573d6000803e3d6000fd5b5050505061572e616b28565b73ffffffffffffffffffffffffffffffffffffffff1663f7ae0022846158086001615757616b28565b73ffffffffffffffffffffffffffffffffffffffff16628f128a896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016157aa9190618736565b60206040518083038186803b1580156157c257600080fd5b505afa1580156157d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506157fa91908101906183ff565b616c0390919063ffffffff16565b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161584192919061881a565b600060405180830381600087803b15801561585b57600080fd5b505af115801561586f573d6000803e3d6000fd5b5050505061587c816174cd565b615886878261761c565b615bc1565b83600181111561589757fe5b6001808111156158a357fe5b1415615bc0576158b161746d565b73ffffffffffffffffffffffffffffffffffffffff1663fd6fb4718487846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161590993929190618751565b600060405180830381600087803b15801561592357600080fd5b505af1158015615937573d6000803e3d6000fd5b50505050615943616b28565b73ffffffffffffffffffffffffffffffffffffffff1663e82cd9ca84846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161599992919061881a565b600060405180830381600087803b1580156159b357600080fd5b505af11580156159c7573d6000803e3d6000fd5b505050506159d3616b28565b73ffffffffffffffffffffffffffffffffffffffff1663d658d69f84615aae60016159fc616b28565b73ffffffffffffffffffffffffffffffffffffffff16637889faeb896040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615a509190618736565b60206040518083038186803b158015615a6857600080fd5b505afa158015615a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615aa091908101906183ff565b616c0390919063ffffffff16565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615ae792919061881a565b600060405180830381600087803b158015615b0157600080fd5b505af1158015615b15573d6000803e3d6000fd5b50505050615b2161749d565b73ffffffffffffffffffffffffffffffffffffffff16633c9b5a8e8888600185805190602001206040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615b839493929190618843565b600060405180830381600087803b158015615b9d57600080fd5b505af1158015615bb1573d6000803e3d6000fd5b50505050615bbf8782617765565b5b5b615bcb87876178ad565b615bd3616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663842178","b2876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615c279190618bd4565b600060405180830381600087803b158015615c4157600080fd5b505af1158015615c55573d6000803e3d6000fd5b5050505050505050505050565b615c6a616b28565b73ffffffffffffffffffffffffffffffffffffffff16634dfefc4b856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615cbe9190618736565b60206040518083038186803b158015615cd657600080fd5b505afa158015615cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615d0e91908101906182f1565b15615df16040805190810160405280600c81526020017f3a206e6f6465206578697374000000000000000000000000000000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615dde5780601f10615db357610100808354040283529160200191615dde565b820191906000526020600020905b815481529060010190602001808311615dc157829003601f168201915b5050505050616b3790919063ffffffff16565b901515615e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615e2b9190618b32565b60405180910390fd5b50615e3d616c5a565b73ffffffffffffffffffffffffffffffffffffffff166371e346626040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015615e9e57600080fd5b505afa158015615eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615ed691908101906183ff565b828290501115615fbe6040805190810160405280600e81526020017f3a2065787420746f6f206c6f6e6700000000000000000000000000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015615fab5780601f10615f8057610100808354040283529160200191615fab565b820191906000526020600020905b815481529060010190602001808311615f8e57829003601f168201915b5050505050616b3790919063ffffffff16565b901515616001576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615ff89190618b32565b60405180910390fd5b50600083116160e86040805190810160405280601081526020017f3a207370616365206d757374203e20300000000000000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156160d55780601f106160aa576101008083540402835291602001916160d5565b820191906000526020600020905b8154815290600101906020018083116160b857829003601f168201915b5050505050616b3790919063ffffffff16565b90151561612b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016161229190618b32565b60405180910390fd5b50616134616b28565b73ffffffffffffffffffffffffffffffffffffffff16633fbbd75e858585856040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161618e9493929190618888565b600060405180830381600087803b1580156161a857600080fd5b505af11580156161bc573d6000803e3d6000fd5b5050505050505050565b60006161d0616eeb565b73ffffffffffffffffffffffffffffffffffffffff16634f0f4aa9836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016162249190618bd4565b60206040518083038186803b15801561623c57600080fd5b505afa158015616250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506162749190810190617f54565b90506000616280616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663c41a360a846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016162d49190618bd4565b60206040518083038186803b1580156162ec57600080fd5b505afa158015616300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506163249190810190617f54565b90506060616330616eeb565b73ffffffffffffffffffffffffffffffffffffffff16633beaa6ab856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016163849190618bd4565b60006040518083038186803b15801561639c57600080fd5b505afa1580156163b0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506163d99190810190618395565b905060006163e5616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663023c23db866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016164399190618bd4565b60206040518083038186803b15801561645157600080fd5b505afa158015616465573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061648991908101906183ff565b90506000616495616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663b6e76873876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016164e99190618bd4565b60206040518083038186803b15801561650157600080fd5b505afa158015616515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506165399190810190618343565b9050616543616b28565b73ffffffffffffffffffffffffffffffffffffffff16630327d3328661661e600161656c616b28565b73ffffffffffffffffffffffffffffffffffffffff1663b7bc5a9d8b6040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016165c09190618736565b60206040518083038186803b1580156165d857600080fd5b505afa1580156165ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061661091908101906183ff565b616c0390919063ffffffff16565b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161665792919061881a565b600060405180830381600087803b15801561667157600080fd5b505af1158015616685573d6000803e3d6000fd5b5050505061669285616f1b565b61669a616eeb565b73ffffffffffffffffffffffffffffffffffffffff166330f6c31d876040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016166ee9190618bd4565b600060405180830381600087803b15801561670857600080fd5b505af115801561671c573d6000803e3d6000fd5b5050505080600181111561672c57fe5b6000600181111561673957fe5b141561694b57606061674c836001616c8a565b905080516001146168356040805190810160405280601581526020017f3a206e6f20617661696c61626c65206e6f64653a31000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156168225780601f106167f757610100808354040283529160200191616822565b820191906000526020600020905b81548152906001019060200180831161680557829003601f168201915b5050505050616b3790919063ffffffff16565b901515616878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161686f9190618b32565b60405180910390fd5b50616881616eeb565b73ffffffffffffffffffffffffffffffffffffffff1663923c6566600087878560008151811015156168af57fe5b90602001906020020151886040518663ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016168f6959493929190618a72565b602060405180830381600087803b15801561691057600080fd5b505af1158015616924573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061694891908101906183ff565b50505b505050505050565b61695b616b28565b73ffffffffffffffffffffffffffffffffffffffff16634dfefc4b826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016169af9190618736565b60206040518083038186803b1580156169c757600080fd5b505afa1580156169db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506169ff91908101906182f1565b616ae16040805190810160405280601081526020017f3a206e6f6465206e6f742065786973740000000000000000000000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015616ace5780601f10616aa357610100808354040283529160200191616ace565b820191906000526020600020905b815481529060010190602001808311616ab157829003601f168201915b5050505050616b3790919063ffffffff16565b901515616b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401616b1b9190618b32565b60405180910390fd5b5050565b6000616b3261150a565b905090565b606082826040516020018083805190602001908083835b602083101515616b735780518252602082019150602081019050602083039250616b4e565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083101515616bc65780518252602082019150602081019050602083039250616ba1565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060","","9150602081019050602083039250617bdb565b6001836020036101000a03801982511681845116808217855250505050505090500183805190602001908083835b602083101515617c535780518252602082019150602081019050602083039250617c2e565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001935050505060405160208183030381529060405290509392505050565b6000617ca48235618e06565b905092915050565b6000617cb88251618e06565b905092915050565b600082601f8301121515617cd357600080fd5b8151617ce6617ce182618c45565b618c18565b91508181835260208401935060208101905083856020840282011115617d0b57600080fd5b60005b83811015617d3b5781617d218882617cac565b845260208401935060208301925050600181019050617d0e565b5050505092915050565b600082601f8301121515617d5857600080fd5b8151617d6b617d6682618c6d565b618c18565b9150818183526020840193506020810190508360005b83811015617db15781518601617d978882617e57565b845260208401935060208301925050600181019050617d81565b5050505092915050565b6000617dc78251618e18565b905092915050565b6000617ddb8235618e24565b905092915050565b6000617def8251618e2e565b905092915050565b6000617e038251618e47565b905092915050565b60008083601f8401121515617e1f57600080fd5b8235905067ffffffffffffffff811115617e3857600080fd5b602083019150836001820283011115617e5057600080fd5b9250929050565b600082601f8301121515617e6a57600080fd5b8151617e7d617e7882618c95565b618c18565b91508082526020830160208301858383011115617e9957600080fd5b617ea4838284618f09565b50505092915050565b600082601f8301121515617ec057600080fd5b8151617ed3617ece82618cc1565b618c18565b91508082526020830160208301858383011115617eef57600080fd5b617efa838284618f09565b50505092915050565b6000617f0f8235618e60565b905092915050565b6000617f238251618e60565b905092915050565b600060208284031215617f3d57600080fd5b6000617f4b84828501617c98565b91505092915050565b600060208284031215617f6657600080fd5b6000617f7484828501617cac565b91505092915050565b600080600080600060a08688031215617f9557600080fd5b6000617fa388828901617cac565b9550506020617fb488828901617de3565b9450506040617fc588828901617cac565b9350506060617fd688828901617f17565b925050608086015167ffffffffffffffff811115617ff357600080fd5b617fff88828901617ead565b9150509295509295909350565b60008060006040848603121561802157600080fd5b600061802f86828701617c98565b935050602084013567ffffffffffffffff81111561804c57600080fd5b61805886828701617e0b565b92509250509250925092565b6000806000806060858703121561807a57600080fd5b600061808887828801617c98565b945050602085013567ffffffffffffffff8111156180a557600080fd5b6180b187828801617e0b565b935093505060406180c487828801617f03565b91505092959194509250565b600080604083850312156180e357600080fd5b60006180f185828601617c98565b925050602061810285828601617f03565b9150509250929050565b6000806000806060858703121561812257600080fd5b600061813087828801617c98565b945050602061814187828801617f03565b935050604085013567ffffffffffffffff81111561815e57600080fd5b61816a87828801617e0b565b925092505092959194509250565b60008060006060848603121561818d57600080fd5b600061819b86828701617c98565b93505060206181ac86828701617f03565b92505060406181bd86828701617f03565b9150509250925092565b6000602082840312156181d957600080fd5b600082015167ffffffffffffffff8111156181f357600080fd5b6181ff84828501617cc0565b91505092915050565b6000806040838503121561821b57600080fd5b600083015167ffffffffffffffff81111561823557600080fd5b61824185828601617cc0565b925050602061825285828601617dbb565b9150509250929050565b60006020828403121561826e57600080fd5b600082015167ffffffffffffffff81111561828857600080fd5b61829484828501617d45565b91505092915050565b600080604083850312156182b057600080fd5b600083015167ffffffffffffffff8111156182ca57600080fd5b6182d685828601617d45565b92505060206182e785828601617dbb565b9150509250929050565b60006020828403121561830357600080fd5b600061831184828501617dbb565b91505092915050565b60006020828403121561832c57600080fd5b600061833a84828501617dcf565b91505092915050565b60006020828403121561835557600080fd5b600061836384828501617de3565b91505092915050565b60006020828403121561837e57600080fd5b600061838c84828501617df7565b91505092915050565b6000602082840312156183a757600080fd5b600082015167ffffffffffffffff8111156183c157600080fd5b6183cd84828501617ead565b91505092915050565b6000602082840312156183e857600080fd5b60006183f684828501617f03565b91505092915050565b60006020828403121561841157600080fd5b600061841f84828501617f17565b91505092915050565b6000806040838503121561843b57600080fd5b600061844985828601617f03565b925050602061845a85828601617f03565b9150509250929050565b6000806040838503121561847757600080fd5b600061848585828601617f17565b925050602061849685828601617f17565b9150509250929050565b6184a981618d72565b82525050565b60006184ba82618d14565b8084526020840193506184cc83618ced565b60005b828110156184fe576184e28683516184a0565b6184eb82618d4b565b91506020860195506001810190506184cf565b50849250505092915050565b600061851582618d1f565b80845260208401935061852783618cfa565b60005b828110156185595761853d8683516185e2565b61854682618d58565b915060208601955060018101905061852a565b50849250505092915050565b600061857082618d2a565b8084526020840193508360208202850161858985618d07565b60005b848110156185c25783830388526185a48383516186ba565b92506185af82618d65565b915060208801975060018101905061858c565b508196508694505050505092915050565b6185dc81618d84565b82525050565b6185eb81618d90565b82525050565b6185fa81618e6a565b82525050565b61860981618e8e565b82525050565b61861881618ea0565b82525050565b61862781618eb2565b82525050565b61863681618ec4565b82525050565b61864581618ed6565b82525050565b61865481618ee8565b82525050565b6000828452602084019350618670838584618efa565b61867983618f3c565b840190509392505050565b600061868f82618d40565b8084526186a3816020860160208601618f09565b6186ac81618f3c565b602085010191505092915050565b60006186c582618d35565b8084526186d9816020860160208601618f09565b6186e281618f3c565b602085010191505092915050565b6000601b82527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006020830152604082019050919050565b61873081618dfc565b82525050565b600060208201905061874b60008301846184a0565b92915050565b600060608201905061876660008301866184a0565b61877360208301856184a0565b81810360408301526187858184618684565b9050949350505050565b60006040820190506187a460008301856184a0565b6187b1602083018461861e565b9392505050565b60006040820190506187cd60008301866184a0565b81810360208301526187e081848661865a565b9050949350505050565b60006040820190506187ff60008301856184a0565b81810360208301526188118184618684565b90509392505050565b600060408201905061882f60008301856184a0565b61883c6020830184618727565b9392505050565b600060808201905061885860008301876184a0565b6188656020830186618727565b6188726040830185618600565b61887f60608301846185e2565b95945050505050565b600060608201905061889d60008301876184a0565b6188aa6020830186618727565b81810360408301526188bd81848661865a565b905095945050505050565b60006060820190506188dd60008301866184a0565b6188ea6020830185618727565b6188f76040830184618727565b949350505050565b6000602082019050818103600083015261891981846184af565b905092915050565b6000604082019050818103600083015261893b81856184af565b905061894a60208301846185d3565b9392505050565b6000602082019050818103600083015261896b818461850a565b905092915050565b6000602082019050818103600083015261898d8184618565565b905092915050565b600060408201905081810360008301526189af8185618565565b90506189be60208301846185d3565b9392505050565b60006020820190506189da60008301846185d3565b92915050565b60006020820190506189f560008301846185e2565b92915050565b6000602082019050618a1060008301846185f1565b92915050565b600060a082019050618a2b600083018961860f565b618a3860208301886184a0565b8181036040830152618a4b81868861865a565b9050618a5a60608301856184a0565b618a676080830184618727565b979650505050505050565b600060a082019050618a87600083018861860f565b618a9460208301876184a0565b8181036040830152618aa68186618684565b9050618ab560608301856184a0565b618ac26080830184618727565b9695505050505050565b6000602082019050618ae1600083018461861e565b92915050565b6000604082019050618afc600083018561864b565b618b09602083018461863c565b9392505050565b60006020820190508181036000830152618b2a81846186ba565b905092915050565b60006020820190508181036000830152618b4c8184618684565b905092915050565b60006040820190508181036000830152618b6e8185618684565b9050618b7d602083018461862d565b9392505050565b60006040820190508181036000830152618b9e8185618684565b9050618bad6020830184618727565b9392505050565b60006020820190508181036000830152618bcd816186f0565b9050919050565b6000602082019050618be96000830184618727565b92915050","565b6000604082019050618c046000830185618727565b618c116020830184618727565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715618c3b57600080fd5b8060405250919050565b600067ffffffffffffffff821115618c5c57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115618c8457600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115618cac57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115618cd857600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000618d7d82618ddc565b9050919050565b60008115159050919050565b6000819050919050565b6000600282101515618da857fe5b819050919050565b6000600282101515618dbe57fe5b819050919050565b6000600582101515618dd457fe5b819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000618e1182618ddc565b9050919050565b60008115159050919050565b6000819050919050565b6000600282101515618e3f57600080fd5b819050919050565b6000600582101515618e5857600080fd5b819050919050565b6000819050919050565b6000618e7582618e7c565b9050919050565b6000618e8782618ddc565b9050919050565b6000618e9982618d9a565b9050919050565b6000618eab82618db0565b9050919050565b6000618ebd82618dc6565b9050919050565b6000618ecf82618dfc565b9050919050565b6000618ee182618dfc565b9050919050565b6000618ef382618dfc565b9050919050565b82818337600083830152505050565b60005b83811015618f27578082015181840152602081019050618f0c565b83811115618f36576000848401525b50505050565b6000601f19601f830116905091905056fe3a206e6577206d616e6167657220697320746865207a65726f20616464726573733a2063616e206e6f74206c6974746c65207468616e2073746f7261676520757365643a2063616e20646f2064655265676973746572206f6e6c7920696e205b526567697374657265642f4d61696e7461696e5d20737461747573a265627a7a723058206fb967600209f1b8e623780971c805ee4dfc705c16f132ca9eb923a2e620366d6c6578706572696d656e74616cf50037"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","ffffffff16565b901515611c37576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611c2e9190618b30565b60405180910390fd5b50611c40616c58565b73ffffffffffffffffffffffffffffffffffffffff166312238c3a60008989856000815181101515611c6e57fe5b906020019060200201518a6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611cb5959493929190618a70565b602060405180830381600087803b158015611ccf57600080fd5b505af1158015611ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d0791908101906183fd565b505050505b50505050505b50565b600080611d20616a1d565b73ffffffffffffffffffffffffffffffffffffffff16633b826830846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d749190618734565b604080518083038186803b158015611d8b57600080fd5b505afa158015611d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dc39190810190618462565b91509150915091565b611dd4616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663c116b3ba856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e289190618734565b60206040518083038186803b158015611e4057600080fd5b505afa158015611e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e7891908101906182ef565b15611f5b6040805190810160405280600c81526020017f3a206e6f6465206578697374000000000000000000000000000000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f485780601f10611f1d57610100808354040283529160200191611f48565b820191906000526020600020905b815481529060010190602001808311611f2b57829003601f168201915b505050505061695190919063ffffffff16565b901515611f9e576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401611f959190618b30565b60405180910390fd5b50611fa76171aa565b73ffffffffffffffffffffffffffffffffffffffff1662c6a4056040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561200757600080fd5b505afa15801561201b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061203f91908101906183fd565b8282905011156121276040805190810160405280600e81526020017f3a2065787420746f6f206c6f6e6700000000000000000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121145780601f106120e957610100808354040283529160200191612114565b820191906000526020600020905b8154815290600101906020018083116120f757829003601f168201915b505050505061695190919063ffffffff16565b90151561216a576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016121619190618b30565b60405180910390fd5b50600083116122516040805190810160405280601081526020017f3a207370616365206d757374203e20300000000000000000000000000000000081525060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561223e5780601f106122135761010080835404028352916020019161223e565b820191906000526020600020905b81548152906001019060200180831161222157829003601f168201915b505050505061695190919063ffffffff16565b901515612294576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161228b9190618b30565b60405180910390fd5b5061229d616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663b2236b64858585856040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122f79493929190618886565b600060405180830381600087803b15801561231157600080fd5b505af1158015612325573d6000803e3d6000fd5b5050505050505050565b6060612339616a1d565b73ffffffffffffffffffffffffffffffffffffffff16633eab5fba836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161238d9190618734565b60006040518083038186803b1580156123a557600080fd5b505afa1580156123b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506123e29190810190618393565b9050919050565b60606123f3616a1d565b73ffffffffffffffffffffffffffffffffffffffff16633f903c6b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160006040518083038186803b15801561245457600080fd5b505afa158015612468573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061249191908101906181c5565b905090565b60606124a0616a1d565b73ffffffffffffffffffffffffffffffffffffffff166348cee0be836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016124f49190618734565b60006040518083038186803b15801561250c57600080fd5b505afa158015612520573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250612549919081019061825a565b9050919050565b600061255a6171aa565b73ffffffffffffffffffffffffffffffffffffffff16631e0c7ae16040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156125bb57600080fd5b505afa1580156125cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506125f391908101906183fd565b905080600014156126dc6040805190810160405280600e81526020017f3a207265706c696361206973203000000000000000000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126c95780601f1061269e576101008083540402835291602001916126c9565b820191906000526020600020905b8154815290600101906020018083116126ac57829003601f168201915b505050505061695190919063ffffffff16565b90151561271f576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016127169190618b30565b60405180910390fd5b50606061272c83836171da565b9050818151146128146040805190810160405280601c81526020017f3a2061646446696c653a206e6f20617661696c61626c65206e6f64650000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128015780601f106127d657610100808354040283529160200191612801565b820191906000526020600020905b8154815290600101906020018083116127e457829003601f168201915b505050505061695190919063ffffffff16565b901515612857576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161284e9190618b30565b60405180910390fd5b5060008090505b81518110156129455761286f616c58565b73ffffffffffffffffffffffffffffffffffffffff166312238c3a6000898989878781518110151561289d57fe5b906020019060200201518a6040518763ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016128e596959493929190618a14565b602060405180830381600087803b1580156128ff57600080fd5b505af1158015612913573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061293791908101906183fd565b50808060010191505061285e565b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612aa76040805190810160405280601981526020017f3a2063616c6c6572206973206e6f7420746865206f776e65720000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a945780601f10612a6957610100808354040283529160200191612a94565b820191906000526020600020905b815481529060010190602001808311612a7757829003601f168201915b505050505061695190919063ffffffff16565b901515612aea576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401612ae19190618b30565b60405180910390fd5b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0c22a62826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612b6291906189de565b60206040518083038186803b158015612b7a57600080fd5b505afa158015612b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612bb29190810190617f52565b6005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffff","ffffffffffffffffffffffffffffffff160217905550600481908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60008073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612d686040805190810160405280601181526020017f3a2053746f72616765206e6f742073657400000000000000000000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d555780601f10612d2a57610100808354040283529160200191612d55565b820191906000526020600020905b815481529060010190602001808311612d3857829003601f168201915b505050505061695190919063ffffffff16565b901515612dab576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401612da29190618b30565b60405180910390fd5b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612ddd82616a2c565b612de5616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663d0613a5f836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612e399190618734565b60206040518083038186803b158015612e5157600080fd5b505afa158015612e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e8991908101906183fd565b811015612f5260606040519081016040528060228152602001618f846022913960008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f3f5780601f10612f1457610100808354040283529160200191612f3f565b820191906000526020600020905b815481529060010190602001808311612f2257829003601f168201915b505050505061695190919063ffffffff16565b901515612f95576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401612f8c9190618b30565b60405180910390fd5b50612f9e616a1d565b73ffffffffffffffffffffffffffffffffffffffff16634b17e3bb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612ff4929190618818565b600060405180830381600087803b15801561300e57600080fd5b505af1158015613022573d6000803e3d6000fd5b505050505050565b600080600080606061303a616c58565b73ffffffffffffffffffffffffffffffffffffffff1663c05a72b2876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161308e9190618bd2565b60006040518083038186803b1580156130a657600080fd5b505afa1580156130ba573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506130e39190810190617f7b565b80955081965082975083985084995050505050508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146132086040805190810160405280601881526020017f3a206e6f64652068617665206e6f2074686973207461736b000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156131f55780601f106131ca576101008083540402835291602001916131f5565b820191906000526020600020905b8154815290600101906020018083116131d857829003601f168201915b505050505061695190919063ffffffff16565b90151561324b576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016132429190618b30565b60405180910390fd5b5083600181111561325857fe5b6000600181111561326557fe5b141561358f5761327361743b565b73ffffffffffffffffffffffffffffffffffffffff1663cd318e148487846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016132cb9392919061874f565b600060405180830381600087803b1580156132e557600080fd5b505af11580156132f9573d6000803e3d6000fd5b50505050613305616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663fdc4793984846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161335b929190618818565b600060405180830381600087803b15801561337557600080fd5b505af1158015613389573d6000803e3d6000fd5b5050505061339561746b565b73ffffffffffffffffffffffffffffffffffffffff1663e5f770bc8888600085805190602001206040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016133f79493929190618841565b600060405180830381600087803b15801561341157600080fd5b505af1158015613425573d6000803e3d6000fd5b50505050613431616a1d565b73ffffffffffffffffffffffffffffffffffffffff166341a64fa18461350c600161345a616a1d565b73ffffffffffffffffffffffffffffffffffffffff16636ddff751896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016134ae9190618734565b60206040518083038186803b1580156134c657600080fd5b505afa1580156134da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506134fe91908101906183fd565b616c0190919063ffffffff16565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401613545929190618818565b600060405180830381600087803b15801561355f57600080fd5b505af1158015613573573d6000803e3d6000fd5b505050506135808161749b565b61358a87826175ea565b6138c4565b83600181111561359b57fe5b6001808111156135a757fe5b14156138c3576135b561743b565b73ffffffffffffffffffffffffffffffffffffffff1663479e2f458487846040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161360d9392919061874f565b600060405180830381600087803b15801561362757600080fd5b505af115801561363b573d6000803e3d6000fd5b50505050613647616a1d565b73ffffffffffffffffffffffffffffffffffffffff16632817fe6a84846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161369d929190618818565b600060405180830381600087803b1580156136b757600080fd5b505af11580156136cb573d6000803e3d6000fd5b505050506136d7616a1d565b73ffffffffffffffffffffffffffffffffffffffff1662b07a0c846137b160016136ff616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663af5cea60896040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016137539190618734565b60206040518083038186803b15801561376b57600080fd5b505afa15801561377f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137a391908101906183fd565b616c0190919063ffffffff16565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016137ea929190618818565b600060405180830381600087803b15801561380457600080fd5b505af1158015613818573d6000803e3d6000fd5b5050505061382461746b565b73ffffffffffffffffffffffffffffffffffffffff1663e5f770bc8888600185805190602001206040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016138869493929190618841565b600060405180830381600087803b1580156138a057600080fd5b505af11580156138b4573d6000803e3d6000fd5b505050506138c28782617733565b5b5b6138ce878761787b565b6138d6616c58565b73ffffffffffffffffffffffffffffffffffffffff1663331021d7876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161392a9190618bd2565b600060405180830381600087803b15801561394457600080fd5b505af1158015613958573d6000803e3d6000fd5b5050505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613a986040805190810160405280601981526020017f3a2063616c6c6572206973206e6f7420746865206f776e65720000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a855780601f10613a5a57610100808354040283529160200191613a85565b820191906000526020600020905b815481529060010190602001808311613a6857829003601f168201915b505050505061695190919063ffffffff16565b901515613adb576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401613ad29190618b30565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613bd360606040519081016040528060218152602001618fa66021913960008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613bc05780601f10613b9557610100808354040283529160200191613bc0565b820191906000526020600020905b815481529060010190602001808311613ba357829003601f168201915b505050505061695190919063ffffffff16565b901515613c16576040517fc703cb120000000000000000000000","","ffffffffffffffffffffffffffffff16639fba14be6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160006040518083038186803b158015614c4857600080fd5b505afa158015614c5c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250614c8591908101906181c5565b905090565b60606000614c96616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663ad76e28585856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614cec929190618bed565b60006040518083038186803b158015614d0457600080fd5b505afa158015614d18573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250614d419190810190618206565b915091509250929050565b6000614d56616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663af8b608f6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015614db757600080fd5b505afa158015614dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614def91908101906183fd565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000614e24616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663bca14431836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614e789190618734565b60206040518083038186803b158015614e9057600080fd5b505afa158015614ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614ec8919081019061836a565b9050919050565b614ed881616a2c565b614ee0616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663e5abcf42826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401614f349190618734565b60206040518083038186803b158015614f4c57600080fd5b505afa158015614f60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250614f8491908101906183fd565b6000146150696040805190810160405280601181526020017f3a2066696c6573206e6f7420656d70747900000000000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156150565780601f1061502b57610100808354040283529160200191615056565b820191906000526020600020905b81548152906001019060200180831161503957829003601f168201915b505050505061695190919063ffffffff16565b9015156150ac576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016150a39190618b30565b60405180910390fd5b5060006150b7616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663bca14431836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161510b9190618734565b60206040518083038186803b15801561512357600080fd5b505afa158015615137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061515b919081019061836a565b905080600481111561516957fe5b6001600481111561517657fe5b1480615198575080600481111561518957fe5b6003600481111561519657fe5b145b61525e60606040519081016040528060388152602001618f4c6038913960008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561524b5780601f106152205761010080835404028352916020019161524b565b820191906000526020600020905b81548152906001019060200180831161522e57829003601f168201915b505050505061695190919063ffffffff16565b9015156152a1576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016152989190618b30565b60405180910390fd5b506152aa616a1d565b73ffffffffffffffffffffffffffffffffffffffff166352fa65f4836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016152fe9190618734565b600060405180830381600087803b15801561531857600080fd5b505af115801561532c573d6000803e3d6000fd5b505050505050565b60006005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061537b616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663c116b3ba836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016153cf9190618734565b60206040518083038186803b1580156153e757600080fd5b505afa1580156153fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061541f91908101906182ef565b9050919050565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156154bc5780601f10615491576101008083540402835291602001916154bc565b820191906000526020600020905b81548152906001019060200180831161549f57829003601f168201915b505050505081565b6154cd81616a2c565b60006154d7616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663bca14431836040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161552b9190618734565b60206040518083038186803b15801561554357600080fd5b505afa158015615557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061557b919081019061836a565b905080600481111561558957fe5b6001600481111561559657fe5b14806155b857508060048111156155a957fe5b600360048111156155b657fe5b145b806155d857508060048111156155ca57fe5b6004808111156155d657fe5b145b6156ba6040805190810160405280600e81526020017f3a2077726f6e672073746174757300000000000000000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156156a75780601f1061567c576101008083540402835291602001916156a7565b820191906000526020600020905b81548152906001019060200180831161568a57829003601f168201915b505050505061695190919063ffffffff16565b9015156156fd576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016156f49190618b30565b60405180910390fd5b506000615708616a1d565b73ffffffffffffffffffffffffffffffffffffffff16631a822aa0846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161575c9190618734565b60206040518083038186803b15801561577457600080fd5b505afa158015615788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506157ac91908101906183fd565b905060006157b8616c58565b73ffffffffffffffffffffffffffffffffffffffff1663410566e1856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161580c9190618734565b60206040518083038186803b15801561582457600080fd5b505afa158015615838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061585c91908101906183fd565b90508181146159436040805190810160405280601681526020017f3a206d7573742066696e69736820616c6c207461736b0000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156159305780601f1061590557610100808354040283529160200191615930565b820191906000526020600020905b81548152906001019060200180831161591357829003601f168201915b505050505061695190919063ffffffff16565b901515615986576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161597d9190618b30565b60405180910390fd5b5061598f616a1d565b73ffffffffffffffffffffffffffffffffffffffff16631650051c8560026040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016159e692919061878d565b600060405180830381600087803b158015615a0057600080fd5b505af1158015615a14573d6000803e3d6000fd5b50505050615a20616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663d088ee6c856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615a749190618734565b60206040518083038186803b158015615a8c57600080fd5b505afa158015615aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615ac491908101906182ef565b1515615b5957615ad2616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663405ad445856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615b269190618734565b600060405180830381600087803b158015615b4057600080fd5b505af1158015615b54573d6000803e3d6000fd5b505050505b50505050565b6000615b69616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663e5abcf42836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615bbd9190618734565b60206040518083038186803b158015615bd557600080fd5b505afa158015615be9573d6000803e3d6000fd5b50505050","6040513d601f19601f82011682018060405250615c0d91908101906183fd565b9050919050565b6000615c1e616c58565b73ffffffffffffffffffffffffffffffffffffffff1663829e9292836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615c729190618bd2565b60206040518083038186803b158015615c8a57600080fd5b505afa158015615c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615cc29190810190617f52565b90506000615cce616c58565b73ffffffffffffffffffffffffffffffffffffffff166317e99c90846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615d229190618bd2565b60206040518083038186803b158015615d3a57600080fd5b505afa158015615d4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615d729190810190617f52565b90506060615d7e616c58565b73ffffffffffffffffffffffffffffffffffffffff166324efcd7a856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615dd29190618bd2565b60006040518083038186803b158015615dea57600080fd5b505afa158015615dfe573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250615e279190810190618393565b90506000615e33616c58565b73ffffffffffffffffffffffffffffffffffffffff1663d055b1e9866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615e879190618bd2565b60206040518083038186803b158015615e9f57600080fd5b505afa158015615eb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615ed791908101906183fd565b90506000615ee3616c58565b73ffffffffffffffffffffffffffffffffffffffff1663be00f796876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401615f379190618bd2565b60206040518083038186803b158015615f4f57600080fd5b505afa158015615f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250615f879190810190618341565b9050615f91616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663d4b041148661606c6001615fba616a1d565b73ffffffffffffffffffffffffffffffffffffffff16639145e95d8b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161600e9190618734565b60206040518083038186803b15801561602657600080fd5b505afa15801561603a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061605e91908101906183fd565b616c0190919063ffffffff16565b6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016160a5929190618818565b600060405180830381600087803b1580156160bf57600080fd5b505af11580156160d3573d6000803e3d6000fd5b505050506160e085616c88565b6160e8616c58565b73ffffffffffffffffffffffffffffffffffffffff1663e5451837876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161613c9190618bd2565b600060405180830381600087803b15801561615657600080fd5b505af115801561616a573d6000803e3d6000fd5b5050505080600181111561617a57fe5b6000600181111561618757fe5b141561639957606061619a8360016171da565b905080516001146162836040805190810160405280601581526020017f3a206e6f20617661696c61626c65206e6f64653a31000000000000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156162705780601f1061624557610100808354040283529160200191616270565b820191906000526020600020905b81548152906001019060200180831161625357829003601f168201915b505050505061695190919063ffffffff16565b9015156162c6576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016162bd9190618b30565b60405180910390fd5b506162cf616c58565b73ffffffffffffffffffffffffffffffffffffffff166312238c3a600087878560008151811015156162fd57fe5b90602001906020020151886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401616344959493929190618a70565b602060405180830381600087803b15801561635e57600080fd5b505af1158015616372573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061639691908101906183fd565b50505b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146164d46040805190810160405280601981526020017f3a2063616c6c6572206973206e6f7420746865206f776e65720000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156164c15780601f10616496576101008083540402835291602001916164c1565b820191906000526020600020905b8154815290600101906020018083116164a457829003601f168201915b505050505061695190919063ffffffff16565b901515616517576040517fc703cb1200000000000000000000000000000000000000000000000000000000815260040161650e9190618b30565b60405180910390fd5b5060008090505b60048054905081101561666f57600060048281548110151561653c57fe5b90600052602060002001549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0c22a62826040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016165c091906189de565b60206040518083038186803b1580156165d857600080fd5b505afa1580156165ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506166109190810190617f52565b6005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050808060010191505061651e565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146167a56040805190810160405280601981526020017f3a2063616c6c6572206973206e6f7420746865206f776e65720000000000000081525060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156167925780601f1061676757610100808354040283529160200191616792565b820191906000526020600020905b81548152906001019060200180831161677557829003601f168201915b505050505061695190919063ffffffff16565b9015156167e8576040517fc703cb120000000000000000000000000000000000000000000000000000000081526004016167df9190618b30565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f52aff5fa0f806e34ba57f9c78d4798c2aee3581f8b3f300dd69a30570494843260405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006168b3616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663fca4f5816040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561691457600080fd5b505afa158015616928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061694c91908101906183fd565b905090565b606082826040516020018083805190602001908083835b60208310151561698d5780518252602082019150602081019050602083039250616968565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b6020831015156169e057805182526020820191506020810190506020830392506169bb565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052905092915050565b6000616a27612c32565b905090565b616a34616a1d565b73ffffffffffffffffffffffffffffffffffffffff1663c116b3ba826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401616a889190618734565b60206040518083038186803b158015616aa057600080fd5b505afa158015616ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250616ad891908101906182ef565b616bba6040805190810160405280601081526020017f3a206e6f6465206e6f742065786973740000000000000000000000000000000081525060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015616ba75780601f10616b7c57610100808354040283529160200191616ba7565b820191906000526020600020905b815481529060010190602001808311616b8a57829003601f168201915b505050505061695190919063ffffffff16565b901515616bfd576040517fc703cb12000000000000000000000000000000000000000000000000000000008152600401616bf4","","","6000604082019050618c026000830185618725565b618c0f6020830184618725565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715618c3957600080fd5b8060405250919050565b600067ffffffffffffffff821115618c5a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115618c8257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115618caa57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115618cd657600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000618d7b82618dda565b9050919050565b60008115159050919050565b6000819050919050565b6000600282101515618da657fe5b819050919050565b6000600282101515618dbc57fe5b819050919050565b6000600582101515618dd257fe5b819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000618e0f82618dda565b9050919050565b60008115159050919050565b6000819050919050565b6000600282101515618e3d57600080fd5b819050919050565b6000600582101515618e5657600080fd5b819050919050565b6000819050919050565b6000618e7382618e7a565b9050919050565b6000618e8582618dda565b9050919050565b6000618e9782618d98565b9050919050565b6000618ea982618dae565b9050919050565b6000618ebb82618dc4565b9050919050565b6000618ecd82618dfa565b9050919050565b6000618edf82618dfa565b9050919050565b6000618ef182618dfa565b9050919050565b82818337600083830152505050565b60005b83811015618f25578082015181840152602081019050618f0a565b83811115618f34576000848401525b50505050565b6000601f19601f830116905091905056fe3a2063616e20646f2064655265676973746572206f6e6c7920696e205b526567697374657265642f4d61696e7461696e5d207374617475733a2063616e206e6f74206c6974746c65207468616e2073746f7261676520757365643a206e6577206d616e6167657220697320746865207a65726f2061646472657373a265627a7a723058204053efad1996d0482face43ca744d7e1dd4b99bf2c7872561bb5f081e9a1f2026c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"maintain\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"resolver\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getNodeCidsNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"pageSize\",\"type\":\"uint256\"},{\"name\":\"pageNumber\",\"type\":\"uint256\"}],\"name\":\"getNodeCids\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getImports\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllOnlineNodeAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStorage\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"cid\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"addFile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"exist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"deRegister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"space\",\"type\":\"uint256\"}],\"name\":\"changeSpace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pageSize\",\"type\":\"uint256\"},{\"name\":\"pageNumber\",\"type\":\"uint256\"}],\"name\":\"getAllNodeAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getNodeCids\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalNodeNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getStorageSpaceInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"addAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setStorage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"ext\",\"type\":\"string\"}],\"name\":\"setExt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"taskTimeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"online\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pageSize\",\"type\":\"uint256\"},{\"name\":\"pageNumber\",\"type\":\"uint256\"}],\"name\":\"getAllOnlineNodeAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"failTask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalOnlineNodeNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllNodeAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refreshCache\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getExt\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"finishTask\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"space\",\"type\":\"uint256\"},{\"name\":\"ext\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"taskAcceptTimeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_resolver\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousValue\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"StorageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousValue\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousValue\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newValue\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_MAINTAIN = "maintain";

    public static final String FUNC_RESOLVER = "resolver";

    public static final String FUNC_GETNODECIDSNUMBER = "getNodeCidsNumber";

    public static final String FUNC_GETNODECIDS = "getNodeCids";

    public static final String FUNC_GETIMPORTS = "getImports";

    public static final String FUNC_SETOWNER = "setOwner";

    public static final String FUNC_GETALLONLINENODEADDRESSES = "getAllOnlineNodeAddresses";

    public static final String FUNC_GETADDRESS = "getAddress";

    public static final String FUNC_GETSTATUS = "getStatus";

    public static final String FUNC_GETSTORAGE = "getStorage";

    public static final String FUNC_MANAGER = "manager";

    public static final String FUNC_ADDFILE = "addFile";

    public static final String FUNC_EXIST = "exist";

    public static final String FUNC_DEREGISTER = "deRegister";

    public static final String FUNC_CHANGESPACE = "changeSpace";

    public static final String FUNC_GETALLNODEADDRESSES = "getAllNodeAddresses";

    public static final String FUNC_CONTRACTNAME = "contractName";

    public static final String FUNC_GETTOTALNODENUMBER = "getTotalNodeNumber";

    public static final String FUNC_GETSTORAGESPACEINFO = "getStorageSpaceInfo";

    public static final String FUNC_ADDADDRESS = "addAddress";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_SETSTORAGE = "setStorage";

    public static final String FUNC_SETEXT = "setExt";

    public static final String FUNC_TASKTIMEOUT = "taskTimeout";

    public static final String FUNC_ONLINE = "online";

    public static final String FUNC_FAILTASK = "failTask";

    public static final String FUNC_GETTOTALONLINENODENUMBER = "getTotalOnlineNodeNumber";

    public static final String FUNC_SETMANAGER = "setManager";

    public static final String FUNC_REFRESHCACHE = "refreshCache";

    public static final String FUNC_GETEXT = "getExt";

    public static final String FUNC_FINISHTASK = "finishTask";

    public static final String FUNC_REGISTER = "register";

    public static final String FUNC_TASKACCEPTTIMEOUT = "taskAcceptTimeout";

    public static final Event STORAGECHANGED_EVENT = new Event("StorageChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event OWNERCHANGED_EVENT = new Event("OwnerChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event MANAGERCHANGED_EVENT = new Event("ManagerChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    protected Node(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt maintain(String addr) {
        final Function function = new Function(
                FUNC_MAINTAIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] maintain(String addr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_MAINTAIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForMaintain(String addr) {
        final Function function = new Function(
                FUNC_MAINTAIN, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getMaintainInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_MAINTAIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public String resolver() throws ContractException {
        final Function function = new Function(FUNC_RESOLVER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public BigInteger getNodeCidsNumber(String addr) throws ContractException {
        final Function function = new Function(FUNC_GETNODECIDSNUMBER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public Tuple2<List<String>, Boolean> getNodeCids(String addr, BigInteger pageSize, BigInteger pageNumber) throws ContractException {
        final Function function = new Function(FUNC_GETNODECIDS, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(pageSize), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(pageNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Bool>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<List<String>, Boolean>(
                convertToNative((List<Utf8String>) results.get(0).getValue()), 
                (Boolean) results.get(1).getValue());
    }

    public List getImports() throws ContractException {
        final Function function = new Function(FUNC_GETIMPORTS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public TransactionReceipt setOwner(String _owner) {
        final Function function = new Function(
                FUNC_SETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_owner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] setOwner(String _owner, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_owner)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetOwner(String _owner) {
        final Function function = new Function(
                FUNC_SETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_owner)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getSetOwnerInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public List getAllOnlineNodeAddresses() throws ContractException {
        final Function function = new Function(FUNC_GETALLONLINENODEADDRESSES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public String getAddress(byte[] name) throws ContractException {
        final Function function = new Function(FUNC_GETADDRESS, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Bytes32(name)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public BigInteger getStatus(String addr) throws ContractException {
        final Function function = new Function(FUNC_GETSTATUS, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public String getStorage() throws ContractException {
        final Function function = new Function(FUNC_GETSTORAGE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public String manager() throws ContractException {
        final Function function = new Function(FUNC_MANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt addFile(String owner, String cid, BigInteger size) {
        final Function function = new Function(
                FUNC_ADDFILE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(owner), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(cid), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(size)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addFile(String owner, String cid, BigInteger size, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDFILE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(owner), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(cid), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(size)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddFile(String owner, String cid, BigInteger size) {
        final Function function = new Function(
                FUNC_ADDFILE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(owner), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(cid), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(size)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, String, BigInteger> getAddFileInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDFILE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, String, BigInteger>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (BigInteger) results.get(2).getValue()
                );
    }

    public Boolean exist(String addr) throws ContractException {
        final Function function = new Function(FUNC_EXIST, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallWithSingleValueReturn(function, Boolean.class);
    }

    public TransactionReceipt deRegister(String addr) {
        final Function function = new Function(
                FUNC_DEREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] deRegister(String addr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_DEREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForDeRegister(String addr) {
        final Function function = new Function(
                FUNC_DEREGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getDeRegisterInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_DEREGISTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt changeSpace(String addr, BigInteger space) {
        final Function function = new Function(
                FUNC_CHANGESPACE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(space)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] changeSpace(String addr, BigInteger space, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CHANGESPACE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(space)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForChangeSpace(String addr, BigInteger space) {
        final Function function = new Function(
                FUNC_CHANGESPACE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(space)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, BigInteger> getChangeSpaceInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CHANGESPACE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public Tuple2<List<String>, Boolean> getAllNodeAddresses(BigInteger pageSize, BigInteger pageNumber) throws ContractException {
        final Function function = new Function(FUNC_GETALLNODEADDRESSES, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(pageSize), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(pageNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}, new TypeReference<Bool>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<List<String>, Boolean>(
                convertToNative((List<Address>) results.get(0).getValue()), 
                (Boolean) results.get(1).getValue());
    }

    public String contractName() throws ContractException {
        final Function function = new Function(FUNC_CONTRACTNAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public List getNodeCids(String addr) throws ContractException {
        final Function function = new Function(FUNC_GETNODECIDS, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public BigInteger getTotalNodeNumber() throws ContractException {
        final Function function = new Function(FUNC_GETTOTALNODENUMBER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public Tuple2<BigInteger, BigInteger> getStorageSpaceInfo(String addr) throws ContractException {
        final Function function = new Function(FUNC_GETSTORAGESPACEINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<BigInteger, BigInteger>(
                (BigInteger) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue());
    }

    public TransactionReceipt addAddress(byte[] name) {
        final Function function = new Function(
                FUNC_ADDADDRESS, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Bytes32(name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] addAddress(byte[] name, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ADDADDRESS, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Bytes32(name)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForAddAddress(byte[] name) {
        final Function function = new Function(
                FUNC_ADDADDRESS, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Bytes32(name)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<byte[]> getAddAddressInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ADDADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<byte[]>(

                (byte[]) results.get(0).getValue()
                );
    }

    public String owner() throws ContractException {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt setStorage(String value) {
        final Function function = new Function(
                FUNC_SETSTORAGE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(value)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] setStorage(String value, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETSTORAGE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(value)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetStorage(String value) {
        final Function function = new Function(
                FUNC_SETSTORAGE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(value)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getSetStorageInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETSTORAGE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt setExt(String addr, String ext) {
        final Function function = new Function(
                FUNC_SETEXT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(ext)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] setExt(String addr, String ext, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETEXT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(ext)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetExt(String addr, String ext) {
        final Function function = new Function(
                FUNC_SETEXT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(ext)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, String> getSetExtInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETEXT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue()
                );
    }

    public TransactionReceipt taskTimeout(BigInteger tid) {
        final Function function = new Function(
                FUNC_TASKTIMEOUT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] taskTimeout(BigInteger tid, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_TASKTIMEOUT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForTaskTimeout(BigInteger tid) {
        final Function function = new Function(
                FUNC_TASKTIMEOUT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getTaskTimeoutInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_TASKTIMEOUT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public TransactionReceipt online(String addr) {
        final Function function = new Function(
                FUNC_ONLINE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] online(String addr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_ONLINE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForOnline(String addr) {
        final Function function = new Function(
                FUNC_ONLINE, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getOnlineInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_ONLINE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple2<List<String>, Boolean> getAllOnlineNodeAddresses(BigInteger pageSize, BigInteger pageNumber) throws ContractException {
        final Function function = new Function(FUNC_GETALLONLINENODEADDRESSES, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(pageSize), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(pageNumber)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}, new TypeReference<Bool>() {}));
        List<Type> results = executeCallWithMultipleValueReturn(function);
        return new Tuple2<List<String>, Boolean>(
                convertToNative((List<Address>) results.get(0).getValue()), 
                (Boolean) results.get(1).getValue());
    }

    public TransactionReceipt failTask(String addr, BigInteger tid) {
        final Function function = new Function(
                FUNC_FAILTASK, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] failTask(String addr, BigInteger tid, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_FAILTASK, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForFailTask(String addr, BigInteger tid) {
        final Function function = new Function(
                FUNC_FAILTASK, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, BigInteger> getFailTaskInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_FAILTASK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public BigInteger getTotalOnlineNodeNumber() throws ContractException {
        final Function function = new Function(FUNC_GETTOTALONLINENODENUMBER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallWithSingleValueReturn(function, BigInteger.class);
    }

    public List getAllNodeAddresses() throws ContractException {
        final Function function = new Function(FUNC_GETALLNODEADDRESSES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public TransactionReceipt setManager(String _manager) {
        final Function function = new Function(
                FUNC_SETMANAGER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_manager)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] setManager(String _manager, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_SETMANAGER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_manager)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForSetManager(String _manager) {
        final Function function = new Function(
                FUNC_SETMANAGER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_manager)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getSetManagerInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_SETMANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt refreshCache() {
        final Function function = new Function(
                FUNC_REFRESHCACHE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] refreshCache(TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REFRESHCACHE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRefreshCache() {
        final Function function = new Function(
                FUNC_REFRESHCACHE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public String getExt(String addr) throws ContractException {
        final Function function = new Function(FUNC_GETEXT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt finishTask(String addr, BigInteger tid) {
        final Function function = new Function(
                FUNC_FINISHTASK, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] finishTask(String addr, BigInteger tid, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_FINISHTASK, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForFinishTask(String addr, BigInteger tid) {
        final Function function = new Function(
                FUNC_FINISHTASK, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, BigInteger> getFinishTaskInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_FINISHTASK, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public TransactionReceipt register(String addr, BigInteger space, String ext) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(space), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(ext)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] register(String addr, BigInteger space, String ext, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(space), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(ext)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRegister(String addr, BigInteger space, String ext) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(addr), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(space), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(ext)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple3<String, BigInteger, String> getRegisterInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REGISTER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple3<String, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue(), 
                (String) results.get(2).getValue()
                );
    }

    public TransactionReceipt taskAcceptTimeout(BigInteger tid) {
        final Function function = new Function(
                FUNC_TASKACCEPTTIMEOUT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] taskAcceptTimeout(BigInteger tid, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_TASKACCEPTTIMEOUT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForTaskAcceptTimeout(BigInteger tid) {
        final Function function = new Function(
                FUNC_TASKACCEPTTIMEOUT, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(tid)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<BigInteger> getTaskAcceptTimeoutInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_TASKACCEPTTIMEOUT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<StorageChangedEventResponse> getStorageChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STORAGECHANGED_EVENT, transactionReceipt);
        ArrayList<StorageChangedEventResponse> responses = new ArrayList<StorageChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StorageChangedEventResponse typedResponse = new StorageChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousValue = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newValue = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeStorageChangedEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(STORAGECHANGED_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeStorageChangedEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(STORAGECHANGED_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<OwnerChangedEventResponse> getOwnerChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERCHANGED_EVENT, transactionReceipt);
        ArrayList<OwnerChangedEventResponse> responses = new ArrayList<OwnerChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnerChangedEventResponse typedResponse = new OwnerChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousValue = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newValue = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeOwnerChangedEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(OWNERCHANGED_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeOwnerChangedEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(OWNERCHANGED_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<ManagerChangedEventResponse> getManagerChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MANAGERCHANGED_EVENT, transactionReceipt);
        ArrayList<ManagerChangedEventResponse> responses = new ArrayList<ManagerChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ManagerChangedEventResponse typedResponse = new ManagerChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousValue = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newValue = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeManagerChangedEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(MANAGERCHANGED_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeManagerChangedEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(MANAGERCHANGED_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static Node load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new Node(contractAddress, client, credential);
    }

    public static Node deploy(Client client, CryptoKeyPair credential, String _resolver) throws ContractException {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Address(_resolver)));
        return deploy(Node.class, client, credential, getBinary(client.getCryptoSuite()), encodedConstructor);
    }

    public static class StorageChangedEventResponse {
        public TransactionReceipt.Logs log;

        public String previousValue;

        public String newValue;
    }

    public static class OwnerChangedEventResponse {
        public TransactionReceipt.Logs log;

        public String previousValue;

        public String newValue;
    }

    public static class ManagerChangedEventResponse {
        public TransactionReceipt.Logs log;

        public String previousValue;

        public String newValue;
    }
}
